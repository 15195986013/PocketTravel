<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.njbd.pt.dao.RoleAssigmentMapper">
    <resultMap id="BaseResultMap" type="com.njbd.pt.model.RoleAssigment">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="role_id" property="roleId" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, role_id, create_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from t_role_assigment
        where id = #{id,jdbcType=VARCHAR}
    </select>


    <!-- 查询管理员权限  -->
    <select id="selectByPage" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List"/>
        from t_role_assigment WHERE 1=1
        <if test="adminId != null">
            AND user_id = #{adminId}
        </if>
        <if test="roleId != null">
            AND role_id = #{roleId}
        </if>
        <if test="start != null">
            LIMIT #{start,jdbcType=INTEGER}, #{end,jdbcType=INTEGER};
        </if>
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_role_assigment
    where id = #{id,jdbcType=VARCHAR}
  </delete>


 <delete id="deleteByMap" parameterType="java.util.HashMap">
    delete from t_role_assigment
    where user_id = #{userId,jdbcType=VARCHAR} AND role_id = #{roleId,jdbcType=VARCHAR}
  </delete>


    <insert id="insert" parameterType="com.njbd.pt.model.RoleAssigment">
    insert into t_role_assigment (id, user_id, role_id, 
      create_time)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.njbd.pt.model.RoleAssigment">
        insert into t_role_assigment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.njbd.pt.model.RoleAssigment">
        update t_role_assigment
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.njbd.pt.model.RoleAssigment">
    update t_role_assigment
    set user_id = #{userId,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>